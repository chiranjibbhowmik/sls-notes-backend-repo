service: sls-notes-backend

custom:
  allowedHeaders:
    - Accept
    - Content-Type
    - Content-Length
    - Authorization
    - X-Amz-Date
    - X-Api-Key
    - X-Amz-Security-Token
    - X-Amz-User-Agent
    - app_user_id
    - app_user_name

provider:
  name: aws
  runtime: nodejs20.x
  region: us-east-1
  stage: prod
  memorySize: 128
  timeout: 5
  endpointType: regional
  environment:
    DB_HOST: database-1.cjius0swscpx.us-east-1.rds.amazonaws.com
    DB_PORT: 5432
    DB_NAME: notes_db
    DB_USER: ${ssm:/notes/db_user}
    DB_PASSWORD: ${ssm:/notes/db_password}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - rds-db:connect
      Resource: arn:aws:rds-db:us-east-1:*:dbuser:*/*

functions:
  add-note:
    handler: api/add-note.handler
    events:
      - http:
          path: note
          method: post
          cors:
            headers: ${self:custom.allowedHeaders}

  update-note:
    handler: api/update-note.handler
    events:
      - http:
          path: note
          method: put
          cors:
            headers: ${self:custom.allowedHeaders}

  get-notes:
    handler: api/get-notes.handler
    events:
      - http:
          path: notes
          method: get
          cors:
            headers: ${self:custom.allowedHeaders}

  get-note:
    handler: api/get-note.handler
    events:
      - http:
          path: note/n/{note_id}
          method: get
          cors:
            headers: ${self:custom.allowedHeaders}

  delete-note:
    handler: api/delete-note.handler
    events:
      - http:
          path: note/n/{note_id}
          method: delete
          cors:
            headers: ${self:custom.allowedHeaders}

  Resources: